
author: nicolas.van.phan
description: "\\n\\nFor a contract with TZIP-16 *non*-compliant metadata, such as the following :\\n\\n\\n```\\n// metadata with incorrect format\\ntype storage = {\\n  data     : int,\\n  metadata : nat, // Should be big_map<string, bytes>\\n};\\ntype param = int;\\ntype ret = [list<operation>, storage];\\n\\n// Dummy entrypoint\\nconst main  = (_p : param, s : storage) : ret =>\\n  [list([]), s];\\n\\n```\\n\\nThe compiler will now throw a warning on `ligo compile contract` and `ligo compile storage`.\\n\\nThe warning is suppressible using the `--no-metadata-check` flag.\\n\\n#### Before\\n\\n\\n```\\n> ligo compile contract 'example.jsligo'\\n{ parameter int ;\\n  storage (pair (int %data) (nat %metadata)) ;\\n  code { CDR ; NIL operation ; PAIR } }\\n\\n```\\n\\n#### After\\n\\n\\n```\\n> ligo compile contract 'example.jsligo' --no-color\\nFile \"example.jsligo\", line 4, characters 13-16:\\n  3 |   data     : int,\\n  4 |   metadata : nat, // Should be big_map<string, bytes>\\n  5 | };\\n:\\nWarning: If the following metadata is meant to be TZIP-16 compliant,\\nthen it should be a 'big_map' from 'string' to 'bytes'.\\nHint: The corresponding type should be :\\n  big_map<string, bytes>\\nYou can disable this warning with the '--no-metadata-check' flag.\\n\\n{ parameter int ;\\n  storage (pair (int %data) (nat %metadata)) ;\\n  code { CDR ; NIL operation ; PAIR } }\\n\\n```\\n\\n\\n```\\n> ligo compile contract --no-metadata-check 'example.jsligo'\\n{ parameter int ;\\n  storage (pair (int %data) (nat %metadata)) ;\\n  code { CDR ; NIL operation ; PAIR } }\\n\\n```\\n\\n"
merge_request: '2628'
title: "Contract Metadata - Check storage metadata type"
type: added
            