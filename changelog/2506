
author: Laucans
description: "\\n### Why\\nDeprecation of Pascaligo has been done following the result of a google form.\\n\\nAfter deprecation, community disagree. Looks like the community who answer to form is not representative to the one who use the compiler.\\nWe want to have a better understanding of our users for the future.\\n\\nFor this we will bring analytics into ligo which gonna be passive collection of feedback from our user.\\n\\n### Agreement\\n#### Interactive\\nBecause privacy is important for us, datas are anonymized. If you don't want to collect data you can deny.\\nStill possible to change your mind by using `ligo analytics accept` or `ligo analytics deny`\\nAgreement answer will be stored in ~/.ligo/term_acceptance.\\n\\n#### Docker, non-interactive\\nIn docker analytics is activated by default. It's possible to use the environment variable LIGO_SKIP_ANALYTICS or the flag `--skip-analytics` describe below\\n\\n#### Using the CLI\\nA new flag `--skip-analytics` has been introduced on every command to skip analytics collection once.\\n\\n#### Through environment variable\\nIf the environment variable LIGO_SKIP_ANALYTICS is set, it'll skip analytics \\n\\n### How datas are anonymized\\nTo identify your project, unique ID is generated and stored in `.ligo/repository_id`. Commit and push this file will help us to understand our users.\\n\\nTo identify you as user, a file is generated in `~/.ligo/user_id`. If you are using ligo in docker. user_id will not be generated and replaced by `docker` in our data.\\n\\nIf you denied analytics, these file still generated\\n\\n### CI\\nIf ligo is used through scripts or CI analytics will not be collected.\\n\\nIf your CI use docker, Use the new image ligo_ci to avoid metrics to be collected.\\n\\n### Analytics example\\nExample of data collected : \\nWhen user use compile command. We collect the id of the user, the id of the project, the version of ligo used, the syntax and protocol used and also the size of the project which has been compiled. When user use ligo init. We collect the id of the user, the id of the project, the version of ligo used, the syntax and protocol used and also the template used to generate project\\n"
merge_request: '2506'
title: "Ligo analytics collection"
type: added
            