=========
list-spread: array / list spread
=========

let larger_list: list<int> = list([5, ...my_list]);

---

(source_file
  (toplevel_binding
    (var_pattern (NameDecl))
    (app_type (TypeName) (TypeName))
    (list_literal
      (Int)
      (spread (Name)))))

=========
rest-pattern: object rest
=========

let xy_translate = ([p, vec]: [point, vector]): point =>
  ({...p, x: p.x + vec.dx, y: p.y + vec.dy});

---

(source_file
  (toplevel_binding
    (var_pattern (NameDecl))
    (lambda
      (fun_arg
        (tuple_pattern (var_pattern (NameDecl)) (var_pattern (NameDecl)))
        (tuple_type (TypeName) (TypeName)))
      (TypeName)
      (paren_expr
        (record_update
          (spread (Name))
          (record_field
            (FieldName)
            (binary_call
              (data_projection (Name) (FieldName))
              (data_projection (Name) (FieldName))))
          (record_field
            (FieldName)
            (binary_call
              (data_projection (Name) (FieldName))
              (data_projection (Name) (FieldName)))))))))
