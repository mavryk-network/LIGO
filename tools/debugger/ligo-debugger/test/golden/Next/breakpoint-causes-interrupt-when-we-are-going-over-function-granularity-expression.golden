Enabled breakpoint within `f`, but not within `g`
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@12:3-12:17
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (1 : int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@12:12-12:17
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:3-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / upon function call
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:18-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: f
      sfLoc: test/contracts/functions-visiting.mligo@2:5-2:20
      sfStack:
        [ StackItem:
          siLigoDesc: elem a of int
          siValue: 1 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:18-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / upon expression
  isStackFrames:
    [ StackFrame:
      sfName: f
      sfLoc: test/contracts/functions-visiting.mligo@2:13-2:20
      sfStack:
        [ StackItem:
          siLigoDesc: elem a of int
          siValue: 1 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:18-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (101 : int)
  isStackFrames:
    [ StackFrame:
      sfName: f
      sfLoc: test/contracts/functions-visiting.mligo@2:13-2:20
      sfStack:
        [ StackItem:
          siLigoDesc: elem a of int
          siValue: 1 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:18-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: f
      sfLoc: test/contracts/functions-visiting.mligo@3:8-3:24
      sfStack:
        [ StackItem:
          siLigoDesc: elem x of int
          siValue: 101 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:18-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (201 : int)
  isStackFrames:
    [ StackFrame:
      sfName: f
      sfLoc: test/contracts/functions-visiting.mligo@3:17-3:24
      sfStack:
        [ StackItem:
          siLigoDesc: elem x of int
          siValue: 101 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:18-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: f
      sfLoc: test/contracts/functions-visiting.mligo@4:8-4:10
      sfStack:
        [ StackItem:
          siLigoDesc: elem x2 of int
          siValue: 201 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:18-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (201 : int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:18-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / upon function call
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:12-13:15
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (20 : int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:12-13:15
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (221 : int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@13:12-13:23
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 1
        , StackItem:
          siLigoDesc: elem g of unit -> int
          siValue:
            { DROP; { { PUSH int 10 }; { PUSH int 10 }; ADD }; {  }; {  } }
        , StackItem:
          siLigoDesc: elem f of int -> int
          siValue:
            { {  };
              { { { PUSH int 100 }; { SWAP }; ADD };
                {  };
                { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@14:3-14:30
      sfStack:
        [ StackItem:
          siLigoDesc: elem s3 of int
          siValue: 221 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated ({ } : operation list)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@14:4-14:25
      sfStack:
        [ StackItem:
          siLigoDesc: elem s3 of int
          siValue: 221 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (Pair { } 221 : operation list * int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@14:4-14:29
      sfStack:
        [ StackItem:
          siLigoDesc: elem s3 of int
          siValue: 221 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]
InterpretSnapshot:
  isStatus: terminated ok
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@14:4-14:29
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of 
          siValue: Pair { } 221
        , StackItem:
          siLigoDesc: elem ? of 
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/functions-visiting.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (pair (lambda unit int) (lambda int int))
                (Pair
                   { DROP;
                     { { PUSH int 10 }; { PUSH int 10 }; ADD };
                     {  };
                     {  } }
                   { {  };
                     { { { PUSH int 100 }; { SWAP }; ADD };
                       {  };
                       { { { PUSH int 100 }; { SWAP }; ADD }; {  }; {  } } } });
              PAIR;
              { UNPAIR;
                UNPAIR;
                DIG 2;
                DROP;
                {  };
                {  };
                LAMBDA
                  (pair (pair (lambda unit int) (lambda int int)) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    UNPAIR;
                    DIG 2;
                    {  };
                    { { { PUSH int 1 }; { SWAP }; ADD };
                      {  };
                      { { { {  }; { DIG 2 }; SWAP; EXEC };
                          { { UNIT }; { DIG 2 }; SWAP; EXEC };
                          ADD };
                        {  };
                        { {  }; { NIL operation }; PAIR } } } };
                DUP 3;
                DUP 3;
                PAIR;
                APPLY;
                SWAP;
                DIG 2;
                DROP 2 } } ] ]