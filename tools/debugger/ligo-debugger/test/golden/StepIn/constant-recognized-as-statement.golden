InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@13:3-13:33
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / upon function call
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@13:18-13:33
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@14:3-17:17
      sfStack:
        [ StackItem:
          siLigoDesc: elem some_int of (Some of (int) | None of (unit))
          siValue: Some 993
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@15:11-15:19
      sfStack:
        [ StackItem:
          siLigoDesc: elem some_int of (Some of (int) | None of (unit))
          siValue: Some 993
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@16:17-16:20
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@19:3-19:13
      sfStack:
        [ StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:3-20:97
      sfStack:
        [ StackItem:
          siLigoDesc: elem y of int
          siValue: 12
        , StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / upon function call
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:85-20:96
      sfStack:
        [ StackItem:
          siLigoDesc: elem y of int
          siValue: 12
        , StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: get_const
      sfLoc: test/contracts/constant_as_statement.mligo@10:20-10:35
      sfStack:
        [ StackItem:
          siLigoDesc: elem some_const of int
          siValue: 10 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:85-20:96
      sfStack:
        [ StackItem:
          siLigoDesc: elem y of int
          siValue: 12
        , StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / upon function call
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:53-20:82
      sfStack:
        [ StackItem:
          siLigoDesc: elem y of int
          siValue: 12
        , StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / upon function call
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:67-20:81
      sfStack:
        [ StackItem:
          siLigoDesc: elem y of int
          siValue: 12
        , StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: get_verbatim
      sfLoc: test/contracts/constant_as_statement.mligo@8:23-8:30
      sfStack: []
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:67-20:81
      sfStack:
        [ StackItem:
          siLigoDesc: elem y of int
          siValue: 12
        , StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / upon function call
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:41-20:50
      sfStack:
        [ StackItem:
          siLigoDesc: elem y of int
          siValue: 12
        , StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: get_val
      sfLoc: test/contracts/constant_as_statement.mligo@6:18-6:20
      sfStack: []
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:41-20:50
      sfStack:
        [ StackItem:
          siLigoDesc: elem y of int
          siValue: 12
        , StackItem:
          siLigoDesc: elem res of int
          siValue: 100
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem get_const of unit -> int
          siValue: { PUSH int 10; PAIR; { CAR; {  }; {  } } }
        , StackItem:
          siLigoDesc: elem get_verbatim of unit -> string
          siValue: { DROP; { PUSH string "100" } }
        , StackItem:
          siLigoDesc: elem get_val of unit -> int
          siValue: { DROP; { PUSH int 42 } }
        , StackItem:
          siLigoDesc: elem length of string -> nat
          siValue: { {  }; { {  }; SIZE } } ] ]
InterpretSnapshot:
  isStatus: terminated ok
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/constant_as_statement.mligo@20:4-20:96
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of 
          siValue: Pair { } 167
        , StackItem:
          siLigoDesc: elem ? of 
          siValue: 0 ] ]