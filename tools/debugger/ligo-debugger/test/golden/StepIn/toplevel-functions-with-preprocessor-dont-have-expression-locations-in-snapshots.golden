InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:3-10:42
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / upon expression
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:4-10:41
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / upon function call
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:27-10:41
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / upon expression
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:31-10:40
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / upon expression
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:34-10:40
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (42 : int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:34-10:40
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (Pair 0 42 : int * int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:31-10:40
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: foo
      sfLoc: test/contracts/contract-with-preprocessor.mligo@5:3-5:8
      sfStack:
        [ StackItem:
          siLigoDesc: elem b of int
          siValue: 42
        , StackItem:
          siLigoDesc: elem a of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:31-10:40
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (42 : int)
  isStackFrames:
    [ StackFrame:
      sfName: foo
      sfLoc: test/contracts/contract-with-preprocessor.mligo@5:3-5:8
      sfStack:
        [ StackItem:
          siLigoDesc: elem b of int
          siValue: 42
        , StackItem:
          siLigoDesc: elem a of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:31-10:40
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (42 : int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:27-10:41
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / upon expression
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:4-10:25
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated ({ } : operation list)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:4-10:25
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (Pair { } 42 : operation list * int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:4-10:41
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem foo of int * int -> int
          siValue:
            { {  };
              {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              SWAP;
              {  };
              { {  }; { SWAP }; ADD } } ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]
InterpretSnapshot:
  isStatus: terminated ok
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@10:4-10:41
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of 
          siValue: Pair { } 42
        , StackItem:
          siLigoDesc: elem ? of 
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/contract-with-preprocessor.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { PUSH
                (lambda (pair int int) int)
                { {  };
                  {  };
                  UNPAIR;
                  {  };
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  SWAP;
                  {  };
                  { {  }; { SWAP }; ADD } };
              PAIR;
              { CAR;
                {  };
                {  };
                LAMBDA
                  (pair (lambda (pair int int) int) int)
                  (pair (list operation) int)
                  { UNPAIR;
                    SWAP;
                    {  };
                    { { { { { PUSH int 42 }; { DUP 2 }; ADD }; { SWAP }; PAIR };
                        { SWAP };
                        SWAP;
                        EXEC };
                      { NIL operation };
                      PAIR } };
                DUP 2;
                APPLY;
                SWAP;
                DROP } } ] ]