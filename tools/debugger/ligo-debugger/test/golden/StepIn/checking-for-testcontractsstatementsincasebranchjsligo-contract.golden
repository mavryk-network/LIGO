InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@3:3-3:13
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem p of string
          siValue: "Variant1" ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of string
          siValue: "Variant1"
        , StackItem:
          siLigoDesc: elem main of string -> int -> operation list * int
          siValue:
            { {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              { { PUSH int 0 };
                {  };
                { { PUSH bool False };
                  {  };
                  { { { PUSH bool False };
                      { { PUSH string "Variant1" };
                        { DUP 6 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP 2;
                         { { { PUSH int 42 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { { PUSH bool False } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { {  };
                      { { PUSH string "Variant2" };
                        { DIG 4 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP;
                         { { { PUSH int 44 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { {  } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { { SWAP }; { SWAP }; ADD };
                    { NIL operation };
                    PAIR } } } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@4:10-4:11
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of (False of (unit) | True of (unit))
          siValue: False
        , StackItem:
          siLigoDesc: elem s2 of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem p of string
          siValue: "Variant1" ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of string
          siValue: "Variant1"
        , StackItem:
          siLigoDesc: elem main of string -> int -> operation list * int
          siValue:
            { {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              { { PUSH int 0 };
                {  };
                { { PUSH bool False };
                  {  };
                  { { { PUSH bool False };
                      { { PUSH string "Variant1" };
                        { DUP 6 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP 2;
                         { { { PUSH int 42 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { { PUSH bool False } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { {  };
                      { { PUSH string "Variant2" };
                        { DIG 4 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP;
                         { { { PUSH int 44 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { {  } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { { SWAP }; { SWAP }; ADD };
                    { NIL operation };
                    PAIR } } } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@6:7-6:18
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of (False of (unit) | True of (unit))
          siValue: True
        , StackItem:
          siLigoDesc: elem ? of (False of (unit) | True of (unit))
          siValue: False
        , StackItem:
          siLigoDesc: elem s2 of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem p of string
          siValue: "Variant1" ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of string
          siValue: "Variant1"
        , StackItem:
          siLigoDesc: elem main of string -> int -> operation list * int
          siValue:
            { {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              { { PUSH int 0 };
                {  };
                { { PUSH bool False };
                  {  };
                  { { { PUSH bool False };
                      { { PUSH string "Variant1" };
                        { DUP 6 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP 2;
                         { { { PUSH int 42 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { { PUSH bool False } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { {  };
                      { { PUSH string "Variant2" };
                        { DIG 4 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP;
                         { { { PUSH int 44 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { {  } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { { SWAP }; { SWAP }; ADD };
                    { NIL operation };
                    PAIR } } } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@13:3-13:49
      sfStack:
        [ StackItem:
          siLigoDesc: elem s2 of int
          siValue: 42
        , StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of string
          siValue: "Variant1"
        , StackItem:
          siLigoDesc: elem main of string -> int -> operation list * int
          siValue:
            { {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              { { PUSH int 0 };
                {  };
                { { PUSH bool False };
                  {  };
                  { { { PUSH bool False };
                      { { PUSH string "Variant1" };
                        { DUP 6 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP 2;
                         { { { PUSH int 42 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { { PUSH bool False } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { {  };
                      { { PUSH string "Variant2" };
                        { DIG 4 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP;
                         { { { PUSH int 44 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { {  } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { { SWAP }; { SWAP }; ADD };
                    { NIL operation };
                    PAIR } } } } ] ]
InterpretSnapshot:
  isStatus: terminated ok
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@13:12-13:39
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of 
          siValue: Pair { } 42
        , StackItem:
          siLigoDesc: elem ? of 
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/statements-in-case-branch.jsligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of string
          siValue: "Variant1"
        , StackItem:
          siLigoDesc: elem main of string -> int -> operation list * int
          siValue:
            { {  };
              UNPAIR;
              {  };
              {  };
              SWAP;
              {  };
              { { PUSH int 0 };
                {  };
                { { PUSH bool False };
                  {  };
                  { { { PUSH bool False };
                      { { PUSH string "Variant1" };
                        { DUP 6 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP 2;
                         { { { PUSH int 42 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { { PUSH bool False } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { {  };
                      { { PUSH string "Variant2" };
                        { DIG 4 };
                        { COMPARE; EQ } };
                      OR };
                    {  };
                    {  };
                    {  };
                    IF { DROP;
                         { { { PUSH int 44 }; { DUP 2 }; ADD } };
                         {  };
                         {  };
                         { {  } };
                         {  };
                         {  } }
                       { {  } };
                    {  };
                    { { SWAP }; { SWAP }; ADD };
                    { NIL operation };
                    PAIR } } } } ] ]