InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@5:3-5:19
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]
InterpretSnapshot:
  isStatus: running / upon expression
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@5:13-5:19
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated (0 : int)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@5:13-5:19
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@6:3-6:14
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@7:3-7:14
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]
InterpretSnapshot:
  isStatus: running / faced statement
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@8:3-8:29
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]
InterpretSnapshot:
  isStatus: running / upon expression
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@8:4-8:25
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]
InterpretSnapshot:
  isStatus: running / expression evaluated ({ } : operation list)
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@8:4-8:25
      sfStack:
        [ StackItem:
          siLigoDesc: elem s of int
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]
InterpretSnapshot:
  isStatus: terminated ok
  isStackFrames:
    [ StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@8:4-8:25
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of 
          siValue: Pair { } 0
        , StackItem:
          siLigoDesc: elem ? of 
          siValue: 0 ]
    , StackFrame:
      sfName: main
      sfLoc: test/contracts/seq-nodes-without-locations.mligo@1:1-1:1
      sfStack:
        [ StackItem:
          siLigoDesc: elem ? of int
          siValue: 0
        , StackItem:
          siLigoDesc: elem ? of unit
          siValue: Unit
        , StackItem:
          siLigoDesc: elem main of unit -> int -> operation list * int
          siValue:
            { DROP;
              LAMBDA
                int
                (pair (list operation) int)
                { {  };
                  { { { PUSH int 42 }; { DUP 2 }; ADD; DROP };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    {  };
                    { NIL operation };
                    PAIR } } } ] ]