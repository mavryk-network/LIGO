{
    "name": "ligo-vscode",
    "description": "LIGO VSCode extension includes syntax highlighting, and a language server for LIGO.",
    "author": "Serokell",
    "license": "MIT",
    "version": "0.5.2",
    "repository": {
        "type": "git",
        "url": "https://gitlab.com/ligolang/ligo"
    },
    "publisher": "ligolang-publish",
    "categories": [
        "Programming Languages"
    ],
    "keywords": [],
    "engines": {
        "vscode": "^1.78.0"
    },
    "activationEvents": [
        "onLanguage:ligo",
        "onLanguage:mligo",
        "onLanguage:jsligo"
    ],
    "icon": "logo.png",
    "main": "./client/out/extension",
    "contributes": {
        "languages": [
            {
                "id": "ligo",
                "aliases": [
                    "PascaLIGO"
                ],
                "extensions": [
                    ".ligo",
                    ".pligo"
                ],
                "icon": {
                    "light": "logo.png",
                    "dark": "logo.png"
                },
                "configuration": "./syntaxes/ligo.configuration.json"
            },
            {
                "id": "mligo",
                "aliases": [
                    "CameLIGO"
                ],
                "extensions": [
                    ".mligo"
                ],
                "icon": {
                    "light": "logo.png",
                    "dark": "logo.png"
                },
                "configuration": "./syntaxes/mligo.configuration.json"
            },
            {
                "id": "jsligo",
                "aliases": [
                    "JsLIGO"
                ],
                "extensions": [
                    ".jsligo"
                ],
                "icon": {
                    "light": "logo.png",
                    "dark": "logo.png"
                },
                "configuration": "./syntaxes/jsligo.configuration.json"
            }
        ],
        "grammars": [
            {
                "language": "ligo",
                "scopeName": "source.ligo",
                "path": "./syntaxes/ligo.tmLanguage.json"
            },
            {
                "language": "mligo",
                "scopeName": "source.mligo",
                "path": "./syntaxes/mligo.tmLanguage.json"
            },
            {
                "language": "jsligo",
                "scopeName": "source.jsligo",
                "path": "./syntaxes/jsligo.tmLanguage.json"
            }
        ],
        "configuration": {
            "type": "object",
            "title": "LIGO LSP Configuration",
            "properties": {
                "ligoLanguageServer.maxNumberOfProblems": {
                    "scope": "resource",
                    "type": "number",
                    "default": 100,
                    "description": "Controls the maximum number of diagnostics produced by the server per file."
                },
                "ligoLanguageServer.ligoBinaryPath": {
                    "scope": "resource",
                    "type": "string",
                    "default": "ligo",
                    "description": "Path to the ligo binary, default one is extracted from $PATH variable."
                },
                "ligoLanguageServer.disabledFeatures": {
                    "scope": "resource",
                    "type": "array",
                    "default": [],
                    "markdownDescription": "Disable specific LIGO LSP features. For a list of features, see [the README.md](https://gitlab.com/ligolang/ligo/-/blob/dev/tools/vscode/README.md)."
                },
                "ligoLanguageServer.tezos_source_account": {
                    "scope": "resource",
                    "type": "string",
                    "default": "baker",
                    "description": "Account for originating contracts from. It should contain enough money for origination"
                },
                "ligoLanguageServer.deprecated": {
                    "scope": "resource",
                    "type": "boolean",
                    "default": false,
                    "description": "Enable support for compiling and deploying contracts written in the deprecated PascaLIGO syntax."
                },
                "ligoLanguageServer.loggingVerbosity": {
                    "scope": "resource",
                    "type": "string",
                    "enum": [
                        "error",
                        "warning",
                        "info",
                        "log"
                    ],
                    "default": "info",
                    "description": "The verbosity of logging. Error will show only errors, warning will show errors and warnings, and so on."
                },
                "ligoLanguageServer.maxLineWidth": {
                    "scope": "resource",
                    "type": [
                        "number",
                        "null"
                    ],
                    "default": null,
                    "description": "Sets custom max line width for a formatted file. Default is 80. If a custom `printWidth` is set in `.ligopretty` file, this setting has no effect (see [the README.md](https://gitlab.com/ligolang/ligo/-/blob/dev/tools/vscode/README.md)). Requires LIGO 0.67.0 or newer."
                }
            }
        },
        "commands": [
            {
                "command": "ligo.startServer",
                "title": "LIGO: Start LIGO LSP server",
                "description": "Starts the LIGO LSP server"
            },
            {
                "command": "ligo.stopServer",
                "title": "LIGO: Stop LIGO LSP server",
                "description": "Stops the LIGO LSP server"
            },
            {
                "command": "ligo.restartServer",
                "title": "LIGO: Restart LIGO LSP server",
                "description": "Stops then starts the LIGO LSP server"
            },
            {
                "command": "ligo.compileContract",
                "title": "LIGO: Compile the current LIGO contract",
                "description": "Compiles the current LIGO contract and prints the output to the console"
            },
            {
                "command": "ligo.compileStorage",
                "title": "LIGO: Compile the current LIGO contract's storage",
                "description": "Compiles the current LIGO contract's storage and prints the output to the console"
            },
            {
                "command": "ligo.compileExpression",
                "title": "LIGO: Compile an entrypoint in the current LIGO contract",
                "description": "Compiles an entrypoint in the current LIGO contract and prints the output to the console"
            },
            {
                "command": "ligo.dryRun",
                "title": "LIGO: Run the current LIGO contract",
                "description": "Runs the current LIGO contract with the given parameter and storage"
            },
            {
                "command": "ligo.evaluateFunction",
                "title": "LIGO: Run a function in the current LIGO contract",
                "description": "Runs a function in the current ligo contract on a given argument"
            },
            {
                "command": "ligo.evaluateValue",
                "title": "LIGO: Evaluate a LIGO definition",
                "description": "Evaluates a LIGO definition"
            },
            {
                "command": "ligo.deploy",
                "title": "Tezos: Deploy the current contract",
                "description": "Deploys the current contract on a given network"
            },
            {
                "command": "ligo.generateDeployScript",
                "title": "Tezos: Generate deploy script",
                "description": "Generates deploy script for a given contract"
            },
            {
                "command": "ligo.silentCompileContract",
                "title": "LIGO: Silently compile contract",
                "description": "Compiles the current LIGO contract without UI interactions. Additional compile flags can be provided through an array."
            }
        ]
    },
    "scripts": {
        "vscode:prepublish": "npm run esbuild-base -- --minify",
        "compile": "npm run esbuild-base -- --sourcemap",
        "esbuild-base": "esbuild ./client/src/extension.ts --bundle --outfile=./client/out/extension.js --external:vscode --format=cjs --platform=node",
        "watch": "tsc -b -w",
        "package": "vsce package",
        "lint": "eslint client --ext .ts",
        "build-tests": "tsc -p ./test/",
        "test": "npm run build-tests && node client/out/test/driver.js",
        "extest": "npm run build-tests && extest setup-and-run --yarn --offline client/out/test/vsc-test/commands.test.js",
        "extest-deploy": "npm run build-tests && extest setup-and-run --yarn --offline client/out/test/vsc-test/commands-deploy.test.js"
    },
    "dependencies": {
        "@airgap/beacon-sdk": "^3.0.0",
        "@taquito/signer": "^17.0.0",
        "@taquito/taquito": "^17.0.0",
        "axios": "^1.4.0",
        "detect-installer": "git+https://github.com/ligolang/detect-installer.git",
        "fs-extra": "^11.1.0",
        "node-fetch": "^3.2.3",
        "semver": "^7.3.5",
        "vscode-languageclient": "^8.1.0"
    },
    "devDependencies": {
        "@types/chai": "^4.3.5",
        "@types/copy-paste": "^1.1.30",
        "@types/glob": "^7.2.0",
        "@types/mocha": "^10.0.1",
        "@types/node": "^20.1.0",
        "@types/vscode": "^1.78.0",
        "@typescript-eslint/eslint-plugin": "^4.27.0",
        "@typescript-eslint/parser": "^4.27.0",
        "@vscode/test-electron": "^2.3.0",
        "@vscode/vsce": "^2.19.0",
        "chai": "^4.3.7",
        "copy-paste": "^1.3.0",
        "esbuild": "^0.13.4",
        "eslint": "^7.28.0",
        "eslint-config-airbnb-base": "^14.2.1",
        "eslint-plugin-import": "^2.23.4",
        "glob": "^7.2.0",
        "mocha": "^10.2.0",
        "ts-command-line-args": "^2.1.0",
        "typescript": "^5.0.4",
        "vscode-extension-tester": "^5.5.3"
    }
}
