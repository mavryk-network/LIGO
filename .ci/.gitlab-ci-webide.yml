variables:
  WEBIDE_IMAGE_TAG: "registry.gitlab.com/${CI_PROJECT_PATH}/ligo_webide:${CI_COMMIT_SHORT_SHA}"
  WEBIDE_NEW_IMAGE_TAG: "registry.gitlab.com/${CI_PROJECT_PATH}/ligo_webide_new:${CI_COMMIT_SHORT_SHA}"
  WEBIDE_FRONTEND_NEW_IMAGE_TAG: "registry.gitlab.com/${CI_PROJECT_PATH}/ligo_webide_frontend_new:${CI_COMMIT_SHORT_SHA}"

#######################################################################
# MR integration
#######################################################################

webide-new-backend-build:
  extends: .docker-image
  stage: build
  needs:
    - job: changelog
      artifacts: false
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_PATH == "ligolang/ligo"'
      changes:
        - tools/webide-new/ligo-webide-backend/**/*
      when: always
  script:
    - docker build tools/webide-new/ligo-webide-backend
  after_script:
    - docker image rm "${WEBIDE_NEW_IMAGE_TAG}" >/dev/null 2>&1 || true

webide-new-frontend-build:
  extends: .docker-image
  stage: deploy
  needs:
    - job: changelog
      artifacts: false
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_PATH == "ligolang/ligo"'
      changes:
        - tools/webide-new/ligo-webide-frontend/ligo-ide/**/*
        - tools/lsp/vscode-plugin/syntaxes
      when: always
  script:
    - docker buildx build --build-context syntaxes=tools/lsp/vscode-plugin/syntaxes tools/webide-new/ligo-webide-frontend/ligo-ide
  after_script:
    - docker image rm "${WEBIDE_FRONTEND_NEW_IMAGE_TAG}" >/dev/null 2>&1 || true

#######################################################################
# dev branch integration
#######################################################################

webide-backend-build-and-push-backend:
  extends: .docker-image
  stage: deploy
  rules:
    # Only deploy docker when from the dev branch or a merge request AND on the canonical ligolang/ligo repository
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_PROJECT_PATH == "ligolang/ligo"'
      changes:
        - tools/webide/**/*
        - src/test/examples/**/*
      when: always
    - if: '$CI_COMMIT_REF_NAME == "dev" && $CI_PROJECT_PATH == "ligolang/ligo"'
      when: always
  script:
    - echo "${CI_BUILD_TOKEN}" | docker login -u gitlab-ci-token --password-stdin registry.gitlab.com
    - cp -r src/test/examples tools/webide/packages/client/examples
    - docker build tools/webide --build-arg EXAMPLES_DIR_SRC=packages/client/examples -t ${WEBIDE_IMAGE_TAG}
    - docker push "${WEBIDE_IMAGE_TAG}"
  after_script:
    - docker image rm "${WEBIDE_IMAGE_TAG}" >/dev/null 2>&1 || true

webide-new-backend-build-and-push-backend:
  extends: .docker-image
  stage: deploy
  needs:
    - job: changelog
      artifacts: false
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev" && $CI_PROJECT_PATH == "ligolang/ligo"'
      changes:
        - tools/webide-new/ligo-webide-backend/**/*
      when: always
  script:
    - docker build tools/webide-new/ligo-webide-backend -t ${WEBIDE_NEW_IMAGE_TAG}
    - echo "${CI_BUILD_TOKEN}" | docker login -u gitlab-ci-token --password-stdin registry.gitlab.com
    - docker push "${WEBIDE_NEW_IMAGE_TAG}"
  after_script:
    - docker image rm "${WEBIDE_NEW_IMAGE_TAG}" >/dev/null 2>&1 || true

webide-new-frontend-build-and-push:
  extends: .docker-image
  stage: deploy
  needs:
    - job: changelog
      artifacts: false
  rules:
    - if: '$CI_COMMIT_REF_NAME == "dev" && $CI_PROJECT_PATH == "ligolang/ligo"'
      changes:
        - tools/webide-new/ligo-webide-frontend/ligo-ide/**/*
      when: always
  script:
    - docker buildx build --build-context syntaxes=tools/lsp/vscode-plugin/syntaxes tools/webide-new/ligo-webide-frontend/ligo-ide -t ${WEBIDE_FRONTEND_NEW_IMAGE_TAG}
    - echo "${CI_BUILD_TOKEN}" | docker login -u gitlab-ci-token --password-stdin registry.gitlab.com
    - docker push "${WEBIDE_FRONTEND_NEW_IMAGE_TAG}"
  after_script:
    - docker image rm "${WEBIDE_FRONTEND_NEW_IMAGE_TAG}" >/dev/null 2>&1 || true
