self_pass: LBRACE RBRACE ES6FUN
##
## Ends in an error in state: 63.
##
## braces -> LBRACE inner RBRACE . [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## braces -> LBRACE inner RBRACE . ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LBRACE inner RBRACE
##

Unexpected token.

self_pass: LBRACE RBRACE RPAR
##
## Ends in an error in state: 83.
##
## self_pass_inner -> braces . self_pass_inner [ # ]
##
## The known suffix of the stack is as follows:
## braces
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 63, spurious reduction of production braces -> LBRACE inner RBRACE
##

Unexpected token.

self_pass: LBRACE RPAR
##
## Ends in an error in state: 34.
##
## braces -> LBRACE . inner RBRACE [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## braces -> LBRACE . inner RBRACE ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LBRACE
##

Unexpected token. 

self_pass: LBRACE WILD RPAR
##
## Ends in an error in state: 62.
##
## braces -> LBRACE inner . RBRACE [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## braces -> LBRACE inner . RBRACE ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LBRACE inner
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production inner ->
## In state 61, spurious reduction of production inner -> everything_else inner
##

Unexpected token. 

self_pass: LBRACKET RBRACKET ES6FUN
##
## Ends in an error in state: 66.
##
## brackets -> LBRACKET inner RBRACKET . [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## brackets -> LBRACKET inner RBRACKET . ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LBRACKET inner RBRACKET
##

Unexpected token.

self_pass: LBRACKET RPAR
##
## Ends in an error in state: 33.
##
## brackets -> LBRACKET . inner RBRACKET [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## brackets -> LBRACKET . inner RBRACKET ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LBRACKET
##

Unexpected token.

self_pass: LBRACKET WILD RBRACE
##
## Ends in an error in state: 65.
##
## brackets -> LBRACKET inner . RBRACKET [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## brackets -> LBRACKET inner . RBRACKET ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LBRACKET inner
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production inner ->
## In state 61, spurious reduction of production inner -> everything_else inner
##

Unexpected token.

self_pass: LPAR RBRACKET
##
## Ends in an error in state: 31.
##
## parenthesized -> LPAR . inner RPAR [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## parenthesized -> LPAR . inner RPAR ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LPAR
##

Unexpected token.

self_pass: LPAR RPAR ES6FUN
##
## Ends in an error in state: 69.
##
## parenthesized -> LPAR inner RPAR . [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## parenthesized -> LPAR inner RPAR . ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LPAR inner RPAR
##

Unexpected token.

self_pass: LPAR RPAR RPAR
##
## Ends in an error in state: 76.
##
## self_pass_inner -> parenthesized . self_pass_inner [ # ]
##
## The known suffix of the stack is as follows:
## parenthesized
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 69, spurious reduction of production parenthesized -> LPAR inner RPAR
##

Unexpected token.

self_pass: LPAR WILD RBRACKET
##
## Ends in an error in state: 68.
##
## parenthesized -> LPAR inner . RPAR [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
## parenthesized -> LPAR inner . RPAR ARROW [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## LPAR inner
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production inner ->
## In state 61, spurious reduction of production inner -> everything_else inner
##

Unexpected token.

self_pass: Lang LBRACE RBRACE EOF
##
## Ends in an error in state: 59.
##
## inner -> braces . inner [ RPAR RBRACKET RBRACE ]
##
## The known suffix of the stack is as follows:
## braces
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 63, spurious reduction of production braces -> LBRACE inner RBRACE
##

Unexpected token.

self_pass: Lang LPAR RPAR EOF
##
## Ends in an error in state: 52.
##
## inner -> parenthesized . inner [ RPAR RBRACKET RBRACE ]
##
## The known suffix of the stack is as follows:
## parenthesized
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 69, spurious reduction of production parenthesized -> LPAR inner RPAR
##

Unexpected token.

self_pass: Lang Lang RBRACKET ES6FUN
##
## Ends in an error in state: 57.
##
## inner -> brackets . inner [ RPAR RBRACKET RBRACE ]
##
## The known suffix of the stack is as follows:
## brackets
##

Unexpected token.

self_pass: Lang RBRACKET RPAR
##
## Ends in an error in state: 81.
##
## self_pass_inner -> brackets . self_pass_inner [ # ]
##
## The known suffix of the stack is as follows:
## brackets
##

Unexpected token.

self_pass: Lang RPAR
##
## Ends in an error in state: 28.
##
## brackets -> Lang . inner RBRACKET [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## Lang
##
self_pass: Lang WILD ARROW ES6FUN
##
## Ends in an error in state: 55.
##
## inner -> everything_else ARROW . inner [ RPAR RBRACKET RBRACE ]
##
## The known suffix of the stack is as follows:
## everything_else ARROW
##
self_pass: Lang WILD ES6FUN
##
## Ends in an error in state: 54.
##
## inner -> everything_else . inner [ RPAR RBRACKET RBRACE ]
## inner -> everything_else . ARROW inner [ RPAR RBRACKET RBRACE ]
##
## The known suffix of the stack is as follows:
## everything_else
##

Ill-formed code injection.

self_pass: Lang WILD RBRACE
##
## Ends in an error in state: 71.
##
## brackets -> Lang inner . RBRACKET [ WILD Verbatim VBAR UIdent Type TIMES Switch String SLASH SEMI Rec RPAR RBRACKET RBRACE QUOTE PLUS2 PLUS Or Nat NOT NE Mutez Module Mod MINUS Lxor Lsr Lsl Lor Let Lang Land LT LPAR LE LBRACKET LBRACE Int If Ident GT GE Else EQ2 EQ EOF ELLIPSIS Directive DOT COMMA COLON Bytes BOOL_OR BOOL_AND Attr ]
##
## The known suffix of the stack is as follows:
## Lang inner
##
## WARNING: This example involves spurious reductions.
## This implies that, although the LR(1) items shown above provide an
## accurate view of the past (what has been recognized so far), they
## may provide an INCOMPLETE view of the future (what was expected next).
## In state 54, spurious reduction of production inner ->
## In state 61, spurious reduction of production inner -> everything_else inner
##

Ill-formed code injection.
At this point, if the expression is complete, a closing bracket ']' is expected.

self_pass: RPAR
##
## Ends in an error in state: 0.
##
## self_pass' -> . self_pass [ # ]
##
## The known suffix of the stack is as follows:
##
##

Unexpected token.

self_pass: WILD ARROW RPAR
##
## Ends in an error in state: 79.
##
## self_pass_inner -> everything_else ARROW . self_pass_inner [ # ]
##
## The known suffix of the stack is as follows:
## everything_else ARROW
##

Unexpected token.

self_pass: WILD RPAR
##
## Ends in an error in state: 78.
##
## self_pass_inner -> everything_else . self_pass_inner [ # ]
## self_pass_inner -> everything_else . ARROW self_pass_inner [ # ]
##
## The known suffix of the stack is as follows:
## everything_else
##

Unexpected token 5.

