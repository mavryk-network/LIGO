;; Build of the JsLIGO lexer as a library

(library
 (name lexing_jsligo)
 (public_name ligo.lexing.jsligo)
 (modules Token)
 (libraries
  ;; LIGO
  lexing_shared
  menhir_js_tokens
  lx_jsl_self_units
  lx_js_self_tokens
  ;; Third party
  str
  hex))

;; Build of a standalone lexer for CameLIGO

(executable
 (name LexerMain)
 (libraries
  ;; LIGO
  preprocessing_jsligo
  lexing_shared
  lexing_jsligo
  ;; Third party
  str)
 (modules Version LexerMain))

;; --------------------------------------------------------------------
;; Build of the version source (for the user, as a CLI option)

(rule
 (targets Version.ml)
 (action
  (with-stdout-to
   Version.ml
   (run "sh" "-c" "printf 'let version = \"%s\"' \"${LIGO_VERSION}\""))))

;; Build of standalone lexer JS bundle

(executable
 (name LexerJS)
 (flags -g)
 (js_of_ocaml
  (link_flags "--source-map-root=%{project_root}"))
 ;  (javascript_files threads.js others.js bls12-polynomial.js stdint.js
 ;    digestif.js))
 ; (libraries core zarith_stubs_js integers_stubs_js ctypes_stubs_js
 ;   ligo_api_js js_of_ocaml)
 (modes js)
 (libraries
  ;; LIGO
  preprocessing_jsligo
  lexing_shared
  lexing_jsligo
  ;; Third party
  str)
 (preprocess
  (pps js_of_ocaml-ppx))
 (modules LexerJS))
