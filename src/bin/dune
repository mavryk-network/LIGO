(library
 (name cli)
 (instrumentation
  (backend bisect_ppx))
 (libraries
  core_kernel.version_util
  core_kernel.caml_threads
  simple-utils
  cmdliner
  ligo
  ligo_init
  ligo_compile
  analytics
  build
  repl
  install
  publish
  unpublish
  user
  ligo.cli_helpers
  ligo_api)
 (modules command_unx cli version))

(library
 (name repl)
 (instrumentation
  (backend bisect_ppx))
 (libraries simple-utils cmdliner ligo build lambda-term)
 (modules repl))

(library
 (name install)
 (instrumentation
  (backend bisect_ppx))
 (libraries cli_helpers simple-utils lwt lwt.unix yojson)
 (modules install))

(library
 (name unpublish)
 (instrumentation
  (backend bisect_ppx))
 (libraries package_management)
 (preprocess
  (pps ppx_deriving_yojson))
 (modules unpublish))

(library
 (name publish)
 (instrumentation
  (backend bisect_ppx))
 (libraries package_management)
 (modules publish))

(library
 (name user)
 (instrumentation
  (backend bisect_ppx))
 (libraries
  cli_helpers
  simple-utils
  lwt
  lwt.unix
  base64
  cohttp-lwt-unix
  lambda-term)
 ;Remove unused libs
 (preprocess
  (pps ppx_deriving_yojson))
 (modules user))

(rule
 (targets version.ml)
 (action
  (with-stdout-to
   version.ml
   (run "sh" "-c" "printf 'let version = \"%s\"' \"${LIGO_VERSION}\""))))

; build static executable with --profile static

(env
 (static
  (flags
   (:standard -ccopt -static -cclib "-lgmp"))))

(executable
 (name runligo)
 (public_name ligo)
 (instrumentation
  (backend bisect_ppx))
 (libraries
  ligo_lsp
  simple-utils
  cmdliner
  ligo
  ligo.main_interpreter
  ligo.api
  cli)
 (flags -open Core)
 (modules runligo)
 (package ligo))

;; Make sure the vendored Tezos is gas free to build testing
;; framework for browser

(executable
 (name js_main)
 (ocamlc_flags -g)
 (js_of_ocaml
  (link_flags "--source-map-root=%{project_root}")
  (javascript_files
   threads.js
   others.js
   bls12-polynomial.js
   stdint.js
   digestif.js))
 (libraries
  core
  simple-utils-js
  simple-utils-js.http_uri
  zarith_stubs_js
  integers_stubs_js
  ctypes_stubs_js
  ligo_api
  ligo.main_interpreter
  js_of_ocaml)
 (modes js)
 (preprocess
  (pps js_of_ocaml-ppx))
 (modules js_main))
