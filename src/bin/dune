(library
 (name cli)
 (instrumentation
  (backend bisect_ppx))
 (libraries simple-utils cmdliner ligo ligo_compile build repl install
   publish user cli_helpers daemon ligo_api)
 (modules cli version))

(library
 (name repl)
 (instrumentation
  (backend bisect_ppx))
 (libraries simple-utils cmdliner ligo build lambda-term)
 (modules repl))

(library
 (name install)
 (instrumentation
  (backend bisect_ppx))
 (libraries cli_helpers simple-utils lwt lwt.unix yojson)
 (modules install))

(library
 (name publish)
 (instrumentation
  (backend bisect_ppx))
 (libraries cli_helpers simple-utils lwt lwt.unix tar tar-unix decompress.gz
   bigstringaf base64 cohttp-lwt-unix yojson digestif core_unix
   core_unix.command_unix core_unix.filename_unix)
 (preprocess
  (pps ppx_deriving_yojson))
 (modules publish))

(library
 (name user)
 (instrumentation
  (backend bisect_ppx))
 (libraries cli_helpers simple-utils lwt lwt.unix base64 cohttp-lwt-unix
   lambda-term)
 ;Remove unused libs
 (preprocess
  (pps ppx_deriving_yojson))
 (modules user))

(library
 (name daemon)
 (instrumentation
  (backend bisect_ppx))
 (libraries parse-argv cli_helpers)
 (preprocess
  (pps ppx_deriving_yojson))
 (modules daemon))

(rule
 (targets version.ml)
 (action
  (with-stdout-to
   version.ml
   (run "sh" "-c" "printf 'let version = \"%s\"' \"${LIGO_VERSION}\""))))

; build static executable with --profile static

(env
 (static
  (flags
   (:standard -ccopt -static -cclib "-lgmp"))))

(executable
 (name configurator)
 (modules configurator)
 (flags (:standard))
 (libraries core dune-configurator))

(rule
 (targets win32-flags.sexp)
 (action
  (run ./configurator.exe)))

(executable
 (name runligo)
 (public_name ligo)
 (instrumentation
  (backend bisect_ppx))
 (libraries simple-utils cmdliner ligo cli)
 (flags
  -open
  Core
  (:include win32-flags.sexp))
 (modules runligo)
 (package ligo))
