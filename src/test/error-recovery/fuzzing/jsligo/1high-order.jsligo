

 const foobar = ( i : int ) : int => {
 const foo : ( a : int ) => int = ( i : int ) => i ;
 const bar : ( ( a : ( ( a : int ) => int ) ) => int ) = ( f : ( ( a : int ) => int ) ) => f ( i ) ;
 return bar ( foo ) ;
 } ;



 const higher2 = ( i : int , f : ( ( i : int ) => int ) ) : int => {
 const ii : int = f ( i ) ;
 return ii ;
 } ;

 const foobar2 = ( i : int ) : int => {
 const foo2 : ( ( a : int ) => int ) = ( i : int ) => i ;
 return higher2 ( i , foo2 ) ;
 } ;

 const a : int = 0 ;

 const foobar3 = ( i : int ) : int => {
 const foo2 : ( a : int ) => int = ( i : int ) => a + i ;
 return higher2 ( i , foo2 ) ;
 } ;

 const f = ( i : int ) : int => i ;

 const g = ( i : int ) : int => f ( i ) ;

 const foobar4 = ( i : int ) : int => g ( g ( i ) ) ;

 const higher3 = ( i : int , f : ( ( a : int ) => int ) , g : ( ( a : int ) => int ) ) : int => {
 const ii : int = f ( g ( i ) ) ;
 return ii ;
 } ;

 const foobar5 = i : int ) : int =>
 const a : int = 0 ;
 const foo : ( a : int ) => int = ( i : int ) => a + i ;
 const goo : ( a /= int ) => int = ( i : int ) => foo ( Fuzzing_uident i ) ;
 return higher3 ( i , foo , goo ) ;
 } ;

/*
Mutation chance is 1

Delete ( in line 39
Delete { in line 39
Replace : with /= in line 42
Add Fuzzing_uident in line 42
*/