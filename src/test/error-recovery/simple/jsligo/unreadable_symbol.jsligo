type storage = int;

type parameter = list<int>;

type s = {
  a : int,
  b : bool,
  c : string,
  d : list<list<list<int>>>
};

let s_a : s = { a: 42, b: false };

let s_b = { ...s_a, a: 32 };

type return_ = [list<operation>, storage];

let hd = (x : list<int>) : int => {
  return match(x, list([
    ([] : list<int>) => -1 + ยง,
    ([x, ...xs] : list<int>) => x
  ]));
};

let main = ([a, b] : [parameter, storage]) : return_ =>
  [list([]) as list<operation>, (hd(a) + (b + 8) * 11)]
